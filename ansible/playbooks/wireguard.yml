- hosts: all
  become: true

  tasks:
    # - debug:
    #     msg: "{{ hostvars[item]['ansible_env']['SERVER_PUBLIC_IP'] }}"
    #   with_items: "{{ groups['all'] }}"
    #   when: item != inventory_hostname
    - name: Install WireGuard
      community.general.pacman:
        update_cache: true
        name:
          - wireguard-tools
    - name: Create Configuration Directory
      file:
        path: /etc/wireguard
        state: directory
        mode: '0700'
    - name: Check Key Status
      stat:
        path: /etc/wireguard/privkey
      register: privatekey
    - name: Generate Key
      shell: wg genkey | (umask 0077 && tee /etc/wireguard/privkey) | wg pubkey > /etc/wireguard/pubkey
      when: privatekey.stat.exists == false
    - name: Get Public Key
      slurp:
        src: /etc/wireguard/pubkey
      register: public_key
    - name: Get Private Key
      slurp:
        src: /etc/wireguard/privkey
      register: private_key
    - name: Create WireGuard Configuration
      include_tasks: tasks/wireguard_systemd_generate.yml
      vars:
        wireguard_prefix: 10.1.0
        wireguard_network: "{{ wireguard_prefix }}.0"
        wireguard_cidr: "{{ wireguard_network }}/24"
        wireguard_port: 51820
        dns_search: "server.luotianyi.dev"
        host_servername: "{{ inventory_hostname }}"
        peer_servername: "{{ item }}"
        host_hostname: "{{ host_servername }}.{{ dns_search }}"
        peer_hostname: "{{ peer_servername }}.{{ dns_search }}"
        host_network_id: "{{ network_id }}"
        peer_network_id: "{{ hostvars[item]['network_id'] }}"
        host_public_key: "{{ public_key['content'] | b64decode | trim }}"
        peer_public_key: "{{ hostvars[item]['public_key']['content'] | b64decode | trim }}"
        host_private_key: "{{ private_key['content'] | b64decode | trim }}"
        host_public_ip: "{{ ansible_env['SERVER_PUBLIC_IP'] }}"
        peer_public_ip: "{{ hostvars[item]['ansible_env']['SERVER_PUBLIC_IP'] }}"
        host_private_ip: "{{ wireguard_prefix }}.{{ host_network_id }}"
        peer_private_ip: "{{ wireguard_prefix }}.{{ peer_network_id }}"
        host_private_cidr: "{{ host_private_ip }}/32"
        peer_private_cidr: "{{ peer_private_ip }}/32"
        host_listen_port: "{{ wireguard_port + (peer_network_id | int) }}"  # note the listen port is suffix of peer network id
        peer_listen_port: "{{ wireguard_port + (host_network_id | int) }}"  #      and peer does the same
      with_items: "{{ groups['all'] }}"
      when: item != inventory_hostname
    - name: Allow Wireguard Access
      ufw:
        insert: 5
        rule: allow
        from: "{{ hostvars[item]['ansible_env']['SERVER_PUBLIC_IP'] }}"
        port: 51820:51830
        proto: udp
        state: enabled
        comment: "wireguard: peer {{ item }}"
      with_items: "{{ groups['all'] }}"
    - name: Enable WireGuard
      systemd:
        name: systemd-networkd
        enabled: true
        state: restarted
